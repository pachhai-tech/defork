name: Release IPFS Deploy
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      TIME_NOW: ${{ github.event.repository.pushed_at }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: dapp/package.json
      - name: Install deps
        working-directory: dapp
        run: npm ci
      - name: Build dapp
        working-directory: dapp
        env:
          VITE_APP_VERSION: ${{ github.ref_name }}
          VITE_BUILD_COMMIT: ${{ github.sha }}
          VITE_BUILD_TIME: ${{ github.event.release.published_at || github.event.head_commit.timestamp || env.TIME_NOW }}
        run: npm run build
      - name: Upload to Web3.Storage
        working-directory: dapp
        env:
          WEB3_STORAGE_TOKEN: ${{ secrets.WEB3_STORAGE_TOKEN }}
        run: node scripts/ipfs-deploy.mjs
      - name: Read CID
        id: cid
        working-directory: dapp
        run: echo "cid=$(cat scripts/cid.txt)" >> $GITHUB_OUTPUT
      - name: Update release body with IPFS links
        uses: actions/github-script@v7
        env:
          CID: ${{ steps.cid.outputs.cid }}
        with:
          script: |
            const cid = process.env.CID
            const gw = `https://ipfs.io/ipfs/${cid}/`
            const extra = `\n\n## IPFS Deployment\n- CID: ${cid}\n- Gateway: ${gw}`
            const release_id = context.payload.release?.id
            const owner = context.repo.owner
            const repo = context.repo.repo
            if (!release_id) {
              core.setFailed('No release context found')
            } else {
              const { data: rel } = await github.rest.repos.getRelease({ owner, repo, release_id })
              const body = (rel.body || '') + extra
              await github.rest.repos.updateRelease({ owner, repo, release_id, body })
            }
